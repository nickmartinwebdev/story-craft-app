/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthorizedRouteImport } from './routes/unauthorized'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedTestAuthRouteImport } from './routes/_authenticated/test-auth'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedAdminRouteImport } from './routes/_authenticated/_admin'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'
import { ServerRoute as ApiAuthSignupServerRouteImport } from './routes/api.auth.signup'
import { ServerRoute as ApiAuthSigninServerRouteImport } from './routes/api.auth.signin'
import { ServerRoute as ApiAuthMeServerRouteImport } from './routes/api.auth.me'

const rootServerRouteImport = createServerRootRoute()

const UnauthorizedRoute = UnauthorizedRouteImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedTestAuthRoute = AuthenticatedTestAuthRouteImport.update({
  id: '/test-auth',
  path: '/test-auth',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAdminRoute = AuthenticatedAdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSignupServerRoute = ApiAuthSignupServerRouteImport.update({
  id: '/api/auth/signup',
  path: '/api/auth/signup',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSigninServerRoute = ApiAuthSigninServerRouteImport.update({
  id: '/api/auth/signin',
  path: '/api/auth/signin',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthMeServerRoute = ApiAuthMeServerRouteImport.update({
  id: '/api/auth/me',
  path: '/api/auth/me',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/test-auth': typeof AuthenticatedTestAuthRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/test-auth': typeof AuthenticatedTestAuthRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/_authenticated/_admin': typeof AuthenticatedAdminRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/test-auth': typeof AuthenticatedTestAuthRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/unauthorized'
    | '/dashboard'
    | '/test-auth'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/unauthorized'
    | '/dashboard'
    | '/test-auth'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/signin'
    | '/signup'
    | '/unauthorized'
    | '/_authenticated/_admin'
    | '/_authenticated/dashboard'
    | '/_authenticated/test-auth'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  UnauthorizedRoute: typeof UnauthorizedRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/auth/me': typeof ApiAuthMeServerRoute
  '/api/auth/signin': typeof ApiAuthSigninServerRoute
  '/api/auth/signup': typeof ApiAuthSignupServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/auth/me': typeof ApiAuthMeServerRoute
  '/api/auth/signin': typeof ApiAuthSigninServerRoute
  '/api/auth/signup': typeof ApiAuthSignupServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/auth/me': typeof ApiAuthMeServerRoute
  '/api/auth/signin': typeof ApiAuthSigninServerRoute
  '/api/auth/signup': typeof ApiAuthSignupServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/demo-names'
    | '/api/auth/me'
    | '/api/auth/signin'
    | '/api/auth/signup'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/demo-names'
    | '/api/auth/me'
    | '/api/auth/signin'
    | '/api/auth/signup'
  id:
    | '__root__'
    | '/api/demo-names'
    | '/api/auth/me'
    | '/api/auth/signin'
    | '/api/auth/signup'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiAuthMeServerRoute: typeof ApiAuthMeServerRoute
  ApiAuthSigninServerRoute: typeof ApiAuthSigninServerRoute
  ApiAuthSignupServerRoute: typeof ApiAuthSignupServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/test-auth': {
      id: '/_authenticated/test-auth'
      path: '/test-auth'
      fullPath: '/test-auth'
      preLoaderRoute: typeof AuthenticatedTestAuthRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_admin': {
      id: '/_authenticated/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedAdminRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/signup': {
      id: '/api/auth/signup'
      path: '/api/auth/signup'
      fullPath: '/api/auth/signup'
      preLoaderRoute: typeof ApiAuthSignupServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/signin': {
      id: '/api/auth/signin'
      path: '/api/auth/signin'
      fullPath: '/api/auth/signin'
      preLoaderRoute: typeof ApiAuthSigninServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/me': {
      id: '/api/auth/me'
      path: '/api/auth/me'
      fullPath: '/api/auth/me'
      preLoaderRoute: typeof ApiAuthMeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRoute: typeof AuthenticatedAdminRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedTestAuthRoute: typeof AuthenticatedTestAuthRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRoute: AuthenticatedAdminRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedTestAuthRoute: AuthenticatedTestAuthRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  UnauthorizedRoute: UnauthorizedRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiAuthMeServerRoute: ApiAuthMeServerRoute,
  ApiAuthSigninServerRoute: ApiAuthSigninServerRoute,
  ApiAuthSignupServerRoute: ApiAuthSignupServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
